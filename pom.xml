<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.aueb.information-retrieval-systems.exercise-1</groupId>
    <artifactId>Information-Retrieval-systems-exercise-1</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!-- Properties Section. Change DL4J and ND4J versions here, if required -->
<!--    <properties>-->
<!--        <dl4j.version>1.0.0-beta7</dl4j.version>-->
<!--        <nd4j.version>1.0.0-beta7</nd4j.version>-->
<!--        <logback.version>1.2.3</logback.version>-->
<!--        <java.version>1.8</java.version>-->
<!--        <maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>-->
<!--        <maven.compiler.source>1.8</maven.compiler.source>-->
<!--        <maven.compiler.target>1.8</maven.compiler.target>-->
<!--    </properties>-->


<!--    <dependencies>-->
<!--        &lt;!&ndash; deeplearning4j-core: contains main functionality and neural networks &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.deeplearning4j</groupId>-->
<!--            <artifactId>deeplearning4j-core</artifactId>-->
<!--            <version>${dl4j.version}</version>-->
<!--        </dependency>-->

<!--        &lt;!&ndash;-->
<!--        ND4J backend: every project needs one of these. The backend defines the hardware on which network training-->
<!--        will occur. "nd4j-native-platform" is for CPUs only (for running on all operating systems).-->
<!--        &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.nd4j</groupId>-->
<!--            <artifactId>nd4j-native-platform</artifactId>-->
<!--            <version>${nd4j.version}</version>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>org.nd4j</groupId>-->
<!--            <artifactId>nd4j-native</artifactId>-->
<!--            <version>${nd4j.version}</version>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>org.nd4j</groupId>-->
<!--            <artifactId>nd4j-native</artifactId>-->
<!--            <version>${nd4j.version}</version>-->
<!--            <classifier>windows-x86_64-avx2</classifier>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; CUDA: to use GPU for training (CUDA) instead of CPU, uncomment this, and remove nd4j-native-platform &ndash;&gt;-->
<!--        &lt;!&ndash; Requires CUDA to be installed to use. Change the version (10.0, 10.1, 10.2) to change the CUDA version &ndash;&gt;-->
<!--        &lt;!&ndash;-->
<!--        <dependency>-->
<!--            <groupId>org.nd4j</groupId>-->
<!--            <artifactId>nd4j-cuda-10.1-platform</artifactId>-->
<!--            <version>${nd4j.version}</version>-->
<!--        </dependency>-->
<!--        &ndash;&gt;-->

<!--        &lt;!&ndash; Optional, but recommended: if you use CUDA, also use CuDNN. To use this, CuDNN must also be installed &ndash;&gt;-->
<!--        &lt;!&ndash; See: https://deeplearning4j.org/cudnn &ndash;&gt;-->

<!--        <dependency>-->
<!--            <groupId>org.deeplearning4j</groupId>-->
<!--            <artifactId>deeplearning4j-cuda-10.1</artifactId>-->
<!--            <version>${dl4j.version}</version>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>org.apache.lucene</groupId>-->
<!--            <artifactId>lucene-test-framework</artifactId>-->
<!--            <version>7.7.1</version>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>org.deeplearning4j</groupId>-->
<!--            <artifactId>deeplearning4j-ui</artifactId>-->
<!--            <version>${dl4j.version}</version>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>ch.qos.logback</groupId>-->
<!--            <artifactId>logback-classic</artifactId>-->
<!--            <version>${logback.version}</version>-->
<!--        </dependency>-->

<!--        &lt;!&ndash; Used for downloading data in some of the examples &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.apache.httpcomponents</groupId>-->
<!--            <artifactId>httpclient</artifactId>-->
<!--            <version>4.3.6</version>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>org.apache.lucene</groupId>-->
<!--            <artifactId>lucene-analyzers-common</artifactId>-->
<!--            <version>7.7.1</version>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>org.apache.lucene</groupId>-->
<!--            <artifactId>lucene-queryparser</artifactId>-->
<!--            <version>7.7.1</version>-->
<!--        </dependency>-->
<!--    </dependencies>-->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <lucene.version>7.7.1</lucene.version>
        <nd4j.version>1.0.0-beta3</nd4j.version>
        <dl4j.version>1.0.0-beta3</dl4j.version>
        <flink.version>1.6.0</flink.version>
        <scala.version>2.11</scala.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.25</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-test-framework</artifactId>
            <version>${lucene.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-misc</artifactId>
            <version>${lucene.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-classification</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-backward-codecs</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-sandbox</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-spatial</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-spatial-extras</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-spatial3d</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-suggest</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.joshua</groupId>
            <artifactId>joshua-incubating</artifactId>
            <version>6.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.opennlp</groupId>
            <artifactId>opennlp-tools</artifactId>
            <version>1.9.0</version>
        </dependency>

        <dependency>
            <groupId>com.carrotsearch.randomizedtesting</groupId>
            <artifactId>randomizedtesting-runner</artifactId>
            <version>2.4.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6.1</version>
        </dependency>
        <dependency>
            <groupId>org.locationtech.spatial4j</groupId>
            <artifactId>spatial4j</artifactId>
            <version>0.6</version>
        </dependency>
        <dependency>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>deeplearning4j-core</artifactId>
            <version>${dl4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>deeplearning4j-nlp</artifactId>
            <version>${dl4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>deeplearning4j-ui_2.11</artifactId>
            <version>${dl4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>deeplearning4j-zoo</artifactId>
            <version>${dl4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-native-platform</artifactId>
            <version>${nd4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.16.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-core</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-java</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-shaded-hadoop2</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-twitter_${scala.version}</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-java_${scala.version}</artifactId>
            <version>${flink.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-runtime_${scala.version}</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <dependency>
            <groupId>net.semanticdata</groupId>
            <artifactId>lire</artifactId>
            <version>0.9.4-SNAPSHOT</version>
            <scope>system</scope>
            <systemPath>${basedir}/jars/lire.jar</systemPath>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.lucene</groupId>
                    <artifactId>lucene-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.lucene</groupId>
                    <artifactId>lucene-queryparser</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.lucene</groupId>
                    <artifactId>lucene-analyzers-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>nu.pattern</groupId>
                    <artifactId>opencv</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sangupta</groupId>
                    <artifactId>jopensurf</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>



<!--    <build>-->
<!--        <plugins>-->
<!--            &lt;!&ndash; Maven compiler plugin: compile for Java 8 &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-compiler-plugin</artifactId>-->
<!--                <version>3.5.1</version>-->
<!--                <configuration>-->
<!--                    <source>${java.version}</source>-->
<!--                    <target>${java.version}</target>-->
<!--                </configuration>-->
<!--            </plugin>-->


<!--            &lt;!&ndash;-->
<!--            Maven shade plugin configuration: this is required so that if you build a single JAR file (an "uber-jar")-->
<!--            it will contain all the required native libraries, and the backends will work correctly.-->
<!--            Used for example when running the following commants-->
<!--            mvn package-->
<!--            cd target-->
<!--            java -cp deeplearning4j-examples-1.0.0-beta-bin.jar org.deeplearning4j.LenetMnistExample-->
<!--            &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-shade-plugin</artifactId>-->
<!--                <version>${maven-shade-plugin.version}</version>-->
<!--                <configuration>-->
<!--                    <shadedArtifactAttached>true</shadedArtifactAttached>-->
<!--                    <shadedClassifierName>bin</shadedClassifierName>-->
<!--                    <createDependencyReducedPom>true</createDependencyReducedPom>-->
<!--                    <filters>-->
<!--                        <filter>-->
<!--                            <artifact>*:*</artifact>-->
<!--                            <excludes>-->
<!--                                <exclude>org/datanucleus/**</exclude>-->
<!--                                <exclude>META-INF/*.SF</exclude>-->
<!--                                <exclude>META-INF/*.DSA</exclude>-->
<!--                                <exclude>META-INF/*.RSA</exclude>-->
<!--                            </excludes>-->
<!--                        </filter>-->
<!--                    </filters>-->
<!--                </configuration>-->

<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>shade</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <transformers>-->
<!--                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">-->
<!--                                    <resource>reference.conf</resource>-->
<!--                                </transformer>-->
<!--                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>-->
<!--                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">-->
<!--                                </transformer>-->
<!--                            </transformers>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.21.0</version>
                <configuration>
                    <argLine>-Xmx16G</argLine>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <version>1.1.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>assemble</goal>
                        </goals>
                        <configuration>
                            <programs>
                                <program>
                                    <mainClass>com.manning.dl4s.ch9.StreamingTweetIngestAndLearnApp</mainClass>
                                    <name>stream</name>
                                </program>
                                <program>
                                    <mainClass>com.manning.dl4s.ch9.OutputApp</mainClass>
                                    <name>res</name>
                                </program>
                            </programs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>